@mixin fluid-text($max: 48, $min: 16) {
  font-size: clamp(#{$min}px, #{calc($max / 1440 * 300)}vw, #{$max}px);
}

@mixin reset-link {
  color: inherit;
  
  &, &:hover {
    text-decoration: none;
  }
}

@mixin reset-button {
  padding:0;
  background-color: transparent;
  border: none;
}

@mixin paragraph() {
  max-width: 600px;
  padding-top: 10px;
}

@mixin flex-center($isInline: false) {
  @if $isInline {
    display: inline-flex;
  } @else {
    display: flex;
  }
  
  justify-content: center;
  align-items: center;
}

@mixin flex($direction, $justify) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
}

@mixin flex-items($grow, $shrink, $basis) {
  flex-grow: $grow;
  flex-shrink: $shrink;
  flex-basis: $basis;
}

@mixin flex_column($justify: flex-start) {
  @include flex(column, $justify);
}

@mixin flex_column_between() {
  @include flex(column, space-between);
}

@mixin flex_column_end() {
  @include flex(column, flex-end);
}

@mixin flex_row($justify: space-between) {
  @include flex(row, $justify);
}
@mixin flex_row_end() {
  @include flex(row, flex-end);
}

@mixin flex_row_start() {
  @include flex(row, flex-start);
}

@mixin grid_3($clm1: 1fr, $clm2: 1fr, $clm3: 1fr) {
  display: grid;
  grid-template-columns: $clm1 $clm2 $clm3;
  gap: 10px;
}

@mixin abc-center {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

@mixin position($top: '', $left: '', $bottom: '', $right: '') {
  @if ($top != '') {top: $top;}
  @if ($left != '') {left: $left;}
  @if ($bottom != '') {bottom: $bottom;}
  @if ($right != '') {right: $right;}
}

@mixin square($size) {
  width: $size;
  aspect-ratio: 1;
}
@mixin close_button($size) {
  @include square($size);
  
  display: inline-block;
  position: relative;
  
  &::before, &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: var(--color-platinum);
  }
  &::before {
    rotate: 45deg;
  }
  &::after {
    rotate: -45deg;
  }
}

@mixin visually-hidden {

  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@mixin border-radius($radius: var(--border-radius)) {
  //-webkit-border-radius: $radius;// Chrome и Safari
  //-moz-border-radius: $radius;// Firefox
  //-ms-border-radius: $radius;// Internet Explorer
  //-o-border-radius: $radius;// Opera
  //-khtml-border-radius: $radius; /* KHTML */
  border-radius: $radius;
}

@mixin border-radius-large() {
  @include border-radius(var(--border-radius-large));
}

@mixin shadow() {
  box-shadow: var(--shadow-light);
}

@mixin border_common($shadow: 0) {
  border: 1px dashed var(--color-platinum);
  border-radius: (var(--border-radius-small));
  @if ($shadow != 0) {
   box-shadow: var(--shadow-light);
  }
}



@mixin text-accent {
  font-family: var(--font-famile-base-extra);
  font-size: 1.2rem;
  font-weight: 500;
  text-transform: uppercase;
  
  @include mobile {
    font-size: 1rem;
  }
}

@mixin frame ($shadow: 0) {
  @include border_common($shadow);
}

@mixin frame-accent($type: 'frame') {
  --width-before: 130px;
  @if ($type == 'frame') {
    --padding: 30px 15px 15px;
  } @else {
    --padding: 10px 0px;
    
    @include text-accent;
    
    min-width: var(--width-before);
  }
  
  position: relative;
  padding: var(--padding);
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    @if ($type == 'frame') {
      top: 0;
    } @else {
      bottom: 0;
    }
    right: 0;
    background-color: var(--color-accent);
  }
  
  &::before {
    width: var(--width-before);
    height: 1px;
  }
  
  &::after {
    width: 15px;
    height: 8px;
  }
}

@mixin _article {
  padding-inline: var(--container-padding-x);
}

@mixin transition-common {
  transition: all 0.3s ease 0s;
}

@mixin transition-in($duration: var(--transition-duration-slowly), $delay: 0s) {
  //opacity: 1;
  visibility: visible;
  transition: all $duration ease $delay;
}
@mixin transition-out($duration: var(--transition-duration-slowly), $delay: 0s) {
  //opacity: 0;
  visibility: hidden;
  transition: all $duration ease $delay;
}

@mixin appear-panel-hidden {
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden !important;
}

@mixin appear-panel-visible {
  position: relative;
  top: 0;
  left: 0;
  visibility: visible !important;
  animation: appear-panel var(--transition-duration-slowly) linear 0s forwards;
}

@keyframes appear-panel {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

@mixin bg-img_top_full-pagesize($url) {
  background-image: $url;
  background-repeat: no-repeat; 
  background-position: center top;//0 0;
  background-size: cover;//100% auto;
}

@mixin bg-img($url, $x, $y, $w, $h: auto, $repeat: no-repeat) {
  background-image: $url;
  background-position: $x $y;//bottom  left
  @if $w == cover {
    background-size: cover;
  } @else {
    background-size: $w $h;// 100% auto
  }
  
  background-repeat: $repeat;
}

@mixin bg-img-cover($url) {
  @include bg-img($url, 0, 0, cover);
}
@mixin presentation_block() {
  @include flex_column(center);
  width: 100%;
  min-height: 50vh;
  margin: 0;
  @include mobile {
    //min-height: 70vh;
  }

  &__title {
    max-width: 40rem;
    margin: 10% 0 30px 30px;
    padding: 20px 40px;
    font-size: 4rem;
    font-weight: 700;
    color: var(--color-bg-gray);//#ddd;
    background-color: rgba(0, 0, 0, 0.4);
    
    @include border-radius(var(--border-radius-small));
    
    @include mobile {
      max-width: 100%;
      margin-left: 0;
      padding: 10px 20px;
      font-size: 2.5rem;
      @include border-radius(0);
    }
    
    &-accent {
      font-size: 6rem;
      color: var(--color-yellow);
      
      @include mobile {
        font-size: 4rem;
      }
    }
    
    &-second-info {
      font-size: 1.8rem;
    }
  }
}


//album-item-1 _anim-items _active
@mixin anim-show($left: 0px, $top: 120%, $duration: 0.8s, $startTime: 2s) {
  transform: translate($left, $top);
  opacity: 0;
  transition: all $duration ease $startTime; 
}
@mixin anim-show-active($iTop: 40px, $startTime: 2s) {
  top: $iTop;
  opacity: 1;
  transition: all 0.8s ease $startTime; 
}


@mixin photo-album($size, $count) {
  @include flex_row;
  
  align-items: flex-end;
  position: relative;
  width: 100%;
  height: calc($size * 1.3);
  
  @for $i from 1 through $count {
    
    >img.album-item-#{$i} {
      @include square($size);

      display: block;
      position: absolute;
      top: -10vw;
      left: calc($size * ($i - 1));
      border: 4px solid var(--color-light);
      opacity: 0;
      
      @if ($i % 2 == 0) {
        rotate: 25deg;
        
      } @else {
        rotate: -25deg;
      }
      
      &._anim-show {
        @include anim-show();
      }

      &._active{
        ._anim-show {
          @include anim-show-active();
        }
      }

      &._anim-items {
        &._active{
          $iTop: calc($size / 3);
          $startTime: calc(2s * $i / 2);
          @include anim-show-active($iTop, $startTime);
        }
      }
    }
  }
}

@mixin transform_rotate($deg) {
  //-webkit-transform: rotate($deg);
  //-ms-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin transform_tmp($scale) {
  transform: scale($scale);
  //-ms-transform: scale($scale);// - для IE9 и старше (младше девятой версии трансформация не поддерживается
  //-webkit-transform: scale($scale);// - для Chrome, Safari, Android и iOS
  //-o-transform: scale($scale);// - для Opera до версии 12.10
  //-moz-transform: scale($scale);// - для Firefox до версии 16.0
}
@mixin transform_tmp_scale_move($scale, $x, $y) {
  transform: scale($scale) translate($x, $y);
  -ms-transform: scale($scale) translate($x, $y);// - для IE9 и старше (младше девятой версии трансформация не поддерживается
  -webkit-transform: scale($scale) translate($x, $y);// - для Chrome, Safari, Android и iOS
  -o-transform: scale($scale) translate($x, $y);// - для Opera до версии 12.10
  -moz-transform: scale($scale) translate($x, $y);// - для Firefox до версии 16.0
  //transform: scale(1.3,1.3) rotate(40deg) translate(5px,5px);
}

@mixin transformX_tmp($scale, $move) {
  transform: scale($scale) translateX($move);
  //-ms-transform: scale($scale) translateX($move);// - для IE9 и старше (младше девятой версии трансформация не поддерживается
  //-webkit-transform: scale($scale) translateX($move);// - для Chrome, Safari, Android и iOS
  //-o-transform: scale($scale) translateX($move);// - для Opera до версии 12.10
  //-moz-transform: scale($scale) translateX($move);// - для Firefox до версии 16.0
  //transform: scale(1.3,1.3) rotate(40deg) translate(5px,5px);
}

